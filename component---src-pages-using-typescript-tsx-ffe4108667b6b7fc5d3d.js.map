{"version":3,"file":"component---src-pages-using-typescript-tsx-ffe4108667b6b7fc5d3d.js","mappings":"6LA6CaA,EAA0B,WAAH,OAASC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,oBAAqB,EAE7E,UAlCwD,SAAH,OACnDC,EAAI,EAAJA,KACAC,EAAQ,EAARA,SAAQ,OAERJ,EAAAA,cAACK,EAAAA,EAAM,KACLL,EAAAA,cAAAA,KAAAA,KAAI,mBACc,yBAAG,0BAErBA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,cAAiB,oBACxD,4BAAM,cAAiB,gBAAa,4BAAM,YAAe,UAEnEA,EAAAA,cAAAA,IAAAA,KAAG,gCAC4B,4BAAOI,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCR,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGS,KAAK,yEAAwE,kCAE5E,KAGNT,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+CC/BX,SAASV,EAAI,GAAmC,IAAD,IAAhCW,EAAW,EAAXA,YAAaV,EAAK,EAALA,MAAOW,EAAQ,EAARA,SACzBN,GAASO,EAAAA,EAAAA,gBAAe,YAAxBP,KAcFQ,EAAkBH,GAAeL,EAAKS,aAAaJ,YACnDK,EAAgC,QAApB,EAAGV,EAAKS,oBAAY,aAAjB,EAAmBd,MAExC,OACE,gCACE,6BAAQe,EAAkBf,EAAK,MAAMe,EAAiBf,GACtD,wBAAMgB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASjB,IACnC,wBAAMkB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAZ,EAAKS,oBAAY,aAAjB,EAAmBK,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASjB,IACpC,wBAAMgB,KAAK,sBAAsBC,QAASJ,IACzCF,EAGP,CAEAZ,EAAIqB,aAAe,CACjBV,YAAY,IAQd,K","sources":["webpack://my-blog/./src/pages/using-typescript.tsx","webpack://my-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","data","location","Layout","pathname","site","buildTime","href","Link","to","description","children","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","defaultProps"],"sourceRoot":""}